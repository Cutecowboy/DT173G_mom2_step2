.title{margin:2rem auto}.content,.title{position:relative;top:80px;width:50%}.content{margin:0 auto}#img1,#img2{width:100%;margin:1rem 0;max-width:850px}#img1:hover,#img2:hover{border-radius:20%}.cursive{font-style:italic;font-weight:800}p{font-size:1.2rem}.pic-link{color:#a78412}.pic-link:hover{color:#4b3b08}@media only screen and (max-width:600px){.content,.title{width:80%}}footer{background-color:#771818;color:#fff;font-size:1.2rem;text-align:center;margin-top:1rem;position:relative;top:80px}footer p{padding-top:1rem}footer p:last-child{padding-bottom:1rem}footer a{color:#fff;font-style:italic}footer a:hover{color:#b3b3b3}*,header{margin:0}header{height:80px;background-color:#771818;position:fixed;right:0;top:0;left:0;z-index:1;padding:0 1em;display:flex;justify-content:space-between;align-items:center}.logo a{color:#fff;font-size:.8em;margin:0;text-decoration:none}nav{background-color:#771818;box-shadow:0 0 10px #000;font-size:1.4em;position:absolute;right:0;top:0;height:100vh;width:250px;display:none}nav ul{width:100%;list-style-type:none;text-align:center;margin:0 auto;padding:0}nav li{padding:.8em 0;width:100%}nav a{color:#fff;text-decoration:none;padding:0 1em}nav li:hover{background-color:#ffc04d;cursor:pointer}nav li:hover a{color:#000}.menu-btn{display:flex;align-items:center;padding:8px 15px;background-color:#771818;border:2px solid #fff;cursor:pointer}.open{margin:0 1em}.menu-btn:hover{background-color:#ffc04d;box-shadow:0 0 5px #000;border:2px solid #000}.menu-btn:hover .menu-text{color:#000}.menu-btn:hover .bars{background-color:#000}.menu-icon{margin-right:10px}.bars{display:block;width:20px;height:3px;background-color:#fff;margin:5px 0}.menu-text{font-size:1.2em;color:#fff}.close{margin:1em 1.5em;padding:10px 15px}.cross1{transform:rotate(45deg);top:5px}.cross1,.cross2{width:25px;position:relative}.cross2{transform:rotate(135deg);top:-3px}main{max-width:800px;width:80%;margin:0 auto;font-size:1.2em}h2{margin:1em 0}main p{font-size:1.2em;line-height:1.4em}.current{background-color:orange}.current a{color:#000}@media only screen and (min-width:992px){header{padding:0 3em}.menu-btn{display:none}#open-menu{display:none!important}header{position:fixed}nav{display:block!important;position:static;box-shadow:0 0 0;height:auto;font-size:1.4em;width:auto}nav ul{height:100%}nav li{display:inline;padding:1.2em 0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
